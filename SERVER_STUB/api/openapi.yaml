openapi: 3.0.3
info:
  title: Entitlement API Service For Products
  description: |
    # Entitlement API Documentation

    API for managing entitlements following AIP standards.
  version: v3
servers:
- url: https://virtserver.swaggerhub.com/NicksDemoOrg/Entitlements/v3
  description: SwaggerHub API Auto Mocking
- url: https://api.example.com/v1
paths:
  /entitlements:
    get:
      tags:
      - Entitlements
      summary: Retrieve entitlement records based on filter criteria
      operationId: getEntitlements
      parameters:
      - name: limit
        in: query
        description: The number of items to return
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: offset
        in: query
        description: The number of items to skip before returning the results
        schema:
          minimum: 0
          type: integer
      - name: count
        in: query
        description: The count of items returned
        schema:
          type: integer
      - name: total
        in: query
        schema:
          type: integer
      responses:
        "200":
          description: List of entitlements matching criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
              examples:
                example1:
                  summary: Example response for retrieving entitlements
                  value:
                    limit: 10
                    offset: 0
                    count: 2
                    total: 5
                    data:
                    - id: 1
                      name: Entitlement 1
                      description: Description for entitlement 1
                    - id: 2
                      name: Entitlement 2
                      description: Description for entitlement 2
      x-swagger-router-controller: Entitlements
    patch:
      tags:
      - Entitlements
      summary: Update an entitlement record
      operationId: updateEntitlement
      parameters:
      - name: entitlementID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: updateMask
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Entitlement"
        required: true
      responses:
        "200":
          description: Entitlement updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entitlement"
      x-swagger-router-controller: Entitlements
  /entitlements/search:
    post:
      tags:
      - Entitlements
      summary: Search entitlement records
      operationId: searchEntitlements
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/entitlements_search_body"
        required: true
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
      x-swagger-router-controller: Entitlements
components:
  schemas:
    Entitlement:
      type: object
      properties:
        entitlementID:
          type: integer
        entitlement_group_ID:
          type: string
        entitlement_version:
          type: string
        sku:
          type: string
        ship_date:
          type: string
          format: date
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        activation_date:
          type: string
          format: date
        status:
          type: string
          enum:
          - FULFILLED
          - PENDING
          - CANCELED
        quantity:
          type: integer
        csp_ID:
          type: string
        term:
          type: string
        product_type:
          type: string
        source_ID:
          type: string
        is_eval:
          type: boolean
        uom:
          type: string
      example:
        end_date: 2000-01-23
        csp_ID: csp_ID
        quantity: 2
        activation_date: 2000-01-23
        is_eval: true
        entitlementID: 5
        entitlement_version: entitlement_version
        entitlement_group_ID: entitlement_group_ID
        uom: uom
        product_type: product_type
        term: term
        source_ID: source_ID
        sku: sku
        ship_date: 2000-01-23
        start_date: 2000-01-23
        status: FULFILLED
    inline_response_200:
      type: object
      properties:
        limit:
          type: integer
        offset:
          type: integer
        count:
          type: integer
        total:
          type: integer
        data:
          type: array
          items:
            $ref: "#/components/schemas/Entitlement"
      example:
        total: 5
        offset: 6
        data:
        - end_date: 2000-01-23
          csp_ID: csp_ID
          quantity: 2
          activation_date: 2000-01-23
          is_eval: true
          entitlementID: 5
          entitlement_version: entitlement_version
          entitlement_group_ID: entitlement_group_ID
          uom: uom
          product_type: product_type
          term: term
          source_ID: source_ID
          sku: sku
          ship_date: 2000-01-23
          start_date: 2000-01-23
          status: FULFILLED
        - end_date: 2000-01-23
          csp_ID: csp_ID
          quantity: 2
          activation_date: 2000-01-23
          is_eval: true
          entitlementID: 5
          entitlement_version: entitlement_version
          entitlement_group_ID: entitlement_group_ID
          uom: uom
          product_type: product_type
          term: term
          source_ID: source_ID
          sku: sku
          ship_date: 2000-01-23
          start_date: 2000-01-23
          status: FULFILLED
        limit: 0
        count: 1
    entitlements_search_body:
      type: object
      properties:
        filter:
          type: string
    inline_response_200_1:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/Entitlement"
      example:
        results:
        - end_date: 2000-01-23
          csp_ID: csp_ID
          quantity: 2
          activation_date: 2000-01-23
          is_eval: true
          entitlementID: 5
          entitlement_version: entitlement_version
          entitlement_group_ID: entitlement_group_ID
          uom: uom
          product_type: product_type
          term: term
          source_ID: source_ID
          sku: sku
          ship_date: 2000-01-23
          start_date: 2000-01-23
          status: FULFILLED
        - end_date: 2000-01-23
          csp_ID: csp_ID
          quantity: 2
          activation_date: 2000-01-23
          is_eval: true
          entitlementID: 5
          entitlement_version: entitlement_version
          entitlement_group_ID: entitlement_group_ID
          uom: uom
          product_type: product_type
          term: term
          source_ID: source_ID
          sku: sku
          ship_date: 2000-01-23
          start_date: 2000-01-23
          status: FULFILLED
  parameters:
    limitParam:
      name: limit
      in: query
      description: The number of items to return
      schema:
        maximum: 100
        minimum: 1
        type: integer
        format: int32
        default: 20
    offsetParam:
      name: offset
      in: query
      description: The number of items to skip before returning the results
      schema:
        minimum: 0
        type: integer
    countParam:
      name: count
      in: query
      description: The count of items returned
      schema:
        type: integer
    totalParam:
      name: total
      in: query
      schema:
        type: integer
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://api.example.com/oauth/authorize
          tokenUrl: https://api.example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
