{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/NicksDemoOrg/Simple/1.0.1"
  }, {
    "url" : "https://{environment}.gigantic-server.com:{port}/{basePath}",
    "description" : "The production API server",
    "variables" : {
      "environment" : {
        "default" : "demo",
        "description" : "this value is assigned by the provider"
      },
      "port" : {
        "enum" : [ "8080", "443" ],
        "default" : "3000"
      },
      "basePath" : {
        "default" : "v2"
      }
    }
  } ],
  "info" : {
    "description" : "# Introduction\n\n  This is a Simple Inventory API. \n  You can find out more about Swagger at\n  [http://swagger.io](http://swagger.io) or on\n  [irc.freenode.net, #swagger](http://swagger.io/irc/).\n\n  Here's some **bold** and *italic* text and a [link](https://example.com).\n  \n  ## Lists\n\n  Unordered list:\n  * list item\n  * another one\n\n  Ordered list:\n\n  1. One thing\n  2. Two things\n\n  ## Tables\n  Column A | Column B | Column C\n      --- | ---| ---\n       A1 | B2 | C3\n       A4 | B5 | C6\n\n  # H1\n  ## H2\n  ### H3\n  #### H4\n  ##### H5\n  ###### H6\n\n  ## Code\n\n  `Inline code` with backticks.\n  \n  ## Code block:\n    \n  ```Java\n  \n  public static void main(String[] args) {\n    System.out.println(\"Hello World\")\n  }\n  \n  ```\n\n\n ## Images\n  ![bear](https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRUWyIozVKSjvqD4JrhQJVSnngiOPKDUOzRKg&s)\n\n  ## Using HTML tags in Markdown\n\n  ### Expandable/collapsible sections\n\n  This uses HTML5 `<details>` tag, see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details.\n\n  <details>\n      <summary>Simple API</summary>\n      <p>look at this!</p>\n  </details>\n\n  ### Buttons\n\n  This uses `<form>` + `<input type=\"{}\">`\n\n  <form action=\"https://swagger.io\" target=\"_blank\">\n      <input type=\"text\" placeholder=\"Go to swagger.io\" />\n  </form>\n",
    "version" : "1.0.1-sample",
    "title" : "Simple Inventory API",
    "contact" : {
      "email" : "you@your-company.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-JIRA" : null,
    "x-type" : "ergerg"
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  }, {
    "name" : "user",
    "description" : "CRUD operations for users"
  } ],
  "paths" : {
    "/user" : {
      "post" : {
        "tags" : [ "users" ],
        "x-data" : null,
        "summary" : "Create a user",
        "description" : "This operation is for when a user is creating an account",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              },
              "examples" : {
                "user" : {
                  "summary" : "User Example",
                  "externalValue" : "http://foo.bar/examples/user-example.json"
                }
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "https://api.swaggerhub.com/domains/NicksDemoOrg/Maximum_Efficiency_Domain/1.0.1#/components/schemas/InventoryItem"
              }
            }
          },
          "description" : "model to create user"
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created user"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "operationId" : "",
        "parameters" : [ ],
        "security" : [ {
          "Inventory_auth" : [ "write:inventory" ]
        } ]
      },
      "get" : {
        "summary" : "Your GET endpoint",
        "tags" : [ "users" ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        },
        "operationId" : "get-user",
        "parameters" : [ {
          "schema" : {
            "type" : "integer"
          },
          "in" : "query",
          "name" : "limit",
          "description" : "10"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "https://api.swaggerhub.com/domains/NicksDemoOrg/Maximum_Efficiency_Domain/1.0.1#/components/schemas/InventoryItem"
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Your PUT endpoint",
        "tags" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "2XX" : {
            "description" : "Success"
          }
        },
        "operationId" : "put-user",
        "description" : "Update user cred",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Your DELETE endpoint",
        "tags" : [ ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized - please add token"
          },
          "2XX" : {
            "description" : "Success"
          }
        },
        "operationId" : "delete-user",
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "in" : "query"
        }, {
          "schema" : {
            "type" : "string"
          },
          "in" : "query"
        }, {
          "schema" : {
            "type" : "string"
          },
          "in" : "cookie"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "https://api.swaggerhub.com/domains/NicksDemoOrg/Maximum_Efficiency_Domain/1.0.1#/components/schemas/InventoryItem"
              }
            }
          }
        }
      }
    },
    "/inventory" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "searches inventory",
        "operationId" : "searchInventory",
        "description" : "This operation is to search for inventory in our store. \n",
        "parameters" : [ {
          "in" : "query",
          "name" : "searchString",
          "description" : "This feild is required",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "schema" : {
            "type" : "object",
            "format" : "int32",
            "minimum" : 0,
            "maximum" : 10
          },
          "style" : "deepObject"
        }, {
          "schema" : { },
          "in" : "query",
          "name" : "limit"
        }, {
          "schema" : {
            "type" : "string"
          },
          "in" : "header"
        }, {
          "schema" : {
            "type" : "string"
          },
          "in" : "query"
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryItem"
                }
              }
            }
          },
          "207" : {
            "description" : "Multi-Status (WebDAV)",
            "headers" : {
              "header-0" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "410" : {
            "description" : "Gone"
          }
        },
        "security" : [ {
          "Inventory_auth" : [ "read:inventory" ]
        } ]
      },
      "post" : {
        "tags" : [ "developers" ],
        "x-data" : null,
        "summary" : "adds an inventory item",
        "operationId" : "addInventory",
        "description" : "Adds an item to the system",
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryItem"
              }
            }
          },
          "description" : "Inventory item to add"
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/user/{id}" : {
      "parameters" : [ {
        "schema" : {
          "type" : "string"
        },
        "name" : "id",
        "in" : "path",
        "required" : true
      }, {
        "schema" : {
          "type" : "string"
        },
        "name" : "id",
        "in" : "path",
        "required" : true
      } ],
      "get" : {
        "summary" : "Your GET endpoint",
        "tags" : [ ],
        "responses" : { },
        "operationId" : "get-user-id"
      },
      "put" : {
        "summary" : "Your PUT endpoint",
        "tags" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "operationId" : "put-user-id",
        "description" : "Updates user by ID",
        "x-extension-1" : "userschema",
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "in" : "header"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "https://api.swaggerhub.com/domains/NicksDemoOrg/Maximum_Efficiency_Domain/1.0.1#/components/schemas/InventoryItem"
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "User" : {
        "type" : "object",
        "required" : [ "firstName", "lastName", "email", "password" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "uuid"
          },
          "firstName" : {
            "type" : "string",
            "example" : "Nicholas"
          },
          "lastName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string",
            "format" : "password"
          }
        },
        "x-examples" : {
          "Example 1" : {
            "id" : 0,
            "firstName" : "Nicholas",
            "lastName" : "string",
            "email" : "string",
            "password" : "pa$$word"
          },
          "Example 2" : {
            "id" : 0,
            "firstName" : "Nicholas",
            "lastName" : "string",
            "email" : "string",
            "password" : "pa$$word"
          }
        },
        "$ref" : "https://api.swaggerhub.com/domains/NicksDemoOrg/Maximum_Efficiency_Domain/1.0.1#/components/schemas/InventoryItem"
      },
      "InventoryItem" : {
        "type" : "object",
        "required" : [ "id", "name", "manufacturer", "releaseDate" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "example" : "Widget Adapter"
          },
          "releaseDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2016-08-29T09:12:33.001Z"
          },
          "manufacturer" : {
            "$ref" : "#/components/schemas/Manufacturer"
          }
        }
      },
      "Manufacturer" : {
        "required" : [ "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "ACME Corporation"
          },
          "homePage" : {
            "type" : "string",
            "format" : "url",
            "example" : "https://www.acme-corp.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "408-867-5309"
          }
        },
        "type" : "object"
      }
    },
    "parameters" : {
      "skipParam" : {
        "name" : "skip",
        "in" : "query",
        "description" : "number of items to skip",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "limitParam" : {
        "name" : "limit",
        "in" : "query",
        "description" : "max records to retun",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "responses" : {
      "NotFound" : {
        "description" : "Object not found"
      },
      "IllegalInput" : {
        "description" : "Illegal input for operation"
      },
      "GeneralError" : {
        "description" : "General Error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "https://api.swaggerhub.com/domains/NicksDemoOrg/hplus/1.0.0#/components/schemas/Order"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      },
      "Inventory_auth" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "http://example.com/api/oauth",
            "scopes" : {
              "write:inventory" : "Modify Inventory in your org",
              "read:inventory" : "read your inventory"
            }
          }
        }
      }
    }
  }
}